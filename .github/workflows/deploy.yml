name: Deploy Nextcloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh

      - name: Lint Helm Chart
        run: |
          cd helm
          helm dependency build
          helm lint .
  
  deploy:
    needs: lint
    runs-on: self-hosted
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm and kubectl
        run: |
          if ! command -v helm >/dev/null 2>&1; then
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod +x get_helm.sh
            ./get_helm.sh
          fi
          if ! command -v kubectl >/dev/null 2>&1; then
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            mv kubectl /usr/local/bin/
          fi

      - name: Configure Kubernetes Access
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" | base64 --decode --ignore-garbage > ~/.kube/config
          chmod 600 ~/.kube/config
          echo "::add-mask::$(cat ~/.kube/config)"
          echo " Kubeconfig written."
          echo " Checking Kubernetes access..."
          kubectl cluster-info
          kubectl get nodes

      - name: Add Helm Repositories
        run: |
          helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
          helm repo update

      - name: Deploy Nextcloud
        run: |
          helm upgrade --install nextcloud ./helm \
            --namespace nextcloud \
            --create-namespace \
            --set global.namespace=nextcloud \
            --set redis.enabled=true \
            --set postgresql.enabled=true \
            --set certManager.enabled=true \
            --set deployment.strategy=blue-green \
            --wait --timeout 5m
